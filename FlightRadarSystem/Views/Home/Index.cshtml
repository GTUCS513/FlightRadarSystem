@using Kendo.Mvc.UI
﻿@using Jmelosegui.Mvc.GoogleMap
@{
    var airports = (List<FlightRadarSystem.Models.Airport>)ViewData["Airports"];
    var flights = (List<FlightRadarSystem.Models.Flight>)ViewData["Flights"];
    var aircrafts = (List<FlightRadarSystem.Models.Aircraft>)ViewData["Aircrafts"];
}

<div id="regional-flights" class="main-section-content row">
    <div class="row">
        <h1 id="dash-logo" class="center-block">FLIGHT&#183;RADAR</h1>
    </div>
    <div id="nav-section" class="col-xs-4 column">
        <div class="collapse navbar-collapse" id="sidebar-nav" role="navigation">
            <table style="height: 312px; width: 433px;">
                <tbody>
                    <tr>
                        <td style="width: 397.833px;" colspan="2">
                            <img id="aircraftImage" src="/Content/Images/aircanada.jpg" style="width: 397.833px;">
                        </td>
                    </tr>
                    <tr>
                        <td id ="flightHeader" style="width: 397.833px;" colspan="2">CX93</td>
                    </tr>
                    <tr>
                        <td id="airportOrigin" style="text-align: center; width: 147px;">ORD</td>
                        <td id="airportDestination" style="text-align: center; width: 250.833px;">ANC</td>
                    </tr>
                    <tr>
                        <td id="departure" style="width: 147px;">Departure</td>
                        <td id="arrival" style="width: 250.833px;">&nbsp; &nbsp; Arrival</td>
                    </tr>
                    <tr>
                        <td id="departureScheduled"  style="width: 147px;">Scheduled&nbsp; 20:45</td>
                        <td id="arrivalScheduled" style="width: 250.833px;">Scheduled&nbsp;&nbsp;&nbsp; 00:10</td>
                    </tr>
                    <tr>
                        <td id="departureActual" style="width: 147px;">Actual&nbsp;&nbsp;&nbsp; 00:12</td>
                        <td id="arrivalEstimated" style="width: 250.833px;">Estimated&nbsp;&nbsp;&nbsp; 03:10</td>
                    </tr>
                    <tr>
                        <td id="distanceCovered"style="width: 397.833px;" colspan="2">Great Circle Distance</td>
                    </tr>
                    <tr>
                        <td id="aircraftType" style="width: 397.833px;" colspan="2">Type<br />BOEING 747-867</td>
                    </tr>
                    <tr>
                        <td style="width: 147px;">image</td>
                        <td id="registration"style="width: 250.833px;">Registration<br />B-LJG<br /><br />Track<br />780A29</td>
                    </tr>
                    <tr>
                        <td style="width: 147px;">image</td>
                        <td id="calibratedAlt"style="width: 250.833px;">Calibrated Altitude<br />36000<br /><br />Track<br />285</td>
                    </tr>
                    <tr>
                        <td style="width: 147px;">image</td>
                        <td id="groundSpeed"style="width: 250.833px;">Ground Speed<br />459 kts</td>
                    </tr>
                    <tr>
                        <td style="width: 147px;">image</td>
                        <td id="wind" style="width: 250.833px;">Wind <br /><br />Temperture</td>
                    </tr>
                    <tr>
                        <td style="width: 147px;">image</td>
                        <td style="width: 250.833px;">Radar<br />F-CYMM3<br /><br />LATITUDE<br />58<br /><br />LONGITUDE<br />-115</td>
                    </tr>
                </tbody>
            </table> 
        </div>
        
    </div>
    <div id="map" style="width:75%;height:900px" class="col-xs-9 column">


    </div>
    
</div>


@section scripts
{
    @(Html.GoogleMap().ScriptRegistrar())
}

<script type="text/javascript">
    $(function () {

        @{flights = (List<FlightRadarSystem.Models.Flight>)ViewData["Flights"];}

        setInterval(LoadMap, 900000);  // invoke load every 15 min
        LoadMap(); // load on initial page loaded
        

    });
</script>

<script>


    function LoadMap() {

        //alert("Map loaded");
        var locations = [];

        var mapCanvas = document.getElementById("map");
        //var myCenter = new google.maps.LatLng(40.1244, 32.9917);
        var myCenter1 = new google.maps.LatLng(40.1244, 32.9917);
        var mapOptions = { center: myCenter1, zoom: 6 };
        var map = new google.maps.Map(mapCanvas, mapOptions);
        var line;
        locations.push(myCenter1);
       
        @foreach(var airport in airports)
        {
            <text>

        var marker = new google.maps.Marker({
            icon: '@airport.Icon',
            position: new google.maps.LatLng('@airport.Latitude', '@airport.Longitude', false),
            title: '@airport.alias',
        });
        marker.setMap(map);
        google.maps.event.addDomListener(marker, 'click', function () {

            document.getElementById("aircraftImage").src = "/Content/Images/anadolujet.jpg";

            alert('@airport.Country' + ":" + '@airport.city');
        });
        </text>
        }

        @foreach(var flight in flights)
        {
            <text>

        var marker = new google.maps.Marker({
            icon: "/airplane.png",
            position: new google.maps.LatLng('@flight.Latitude', '@flight.Longitude', false),
            title: '@flight.Status',
        });
        marker.setMap(map);
        google.maps.event.addDomListener(marker, 'click', function () {

            document.getElementById("aircraftImage").src = "/Content/Images/" + '@flight.Aircraft.ImageName';
            document.getElementById("airportOrigin").textContent = '@flight.DepartureAirport.AirportName';
            document.getElementById("airportDestination").textContent = '@flight.ArrivalAirport.AirportName';
            document.getElementById("departureScheduled").textContent = '@flight.DepartureScheduleTime';
            document.getElementById("arrivalScheduled").textContent = '@flight.ArrivalScheduleTime';
            document.getElementById("departureActual").textContent = '@flight.DepartureActualTime';
            document.getElementById("arrivalEstimated").textContent = '@flight.ArrivalActualTime';
            /*document.getElementById("distanceCovered")
            document.getElementById("aircraftType")
            document.getElementById("registration")
            document.getElementById("calibratedAlt")
            document.getElementById("groundSpeed");
            document.getElementById("wind");*/
            alert('@flight.Aircraft.Name');

            if (line != null)
                line.setMap(null);

            var lineCoordinates = [
                new google.maps.LatLng('@flight.DepartureAirport.Latitude', '@flight.DepartureAirport.Longitude'),
                new google.maps.LatLng('@flight.ArrivalAirport.Latitude', '@flight.ArrivalAirport.Longitude')
            ];
            line = new google.maps.Polyline({
                path: lineCoordinates,
                geodesic: true,
                strokeColor: '#FF0000',
                strokeOpacity: 1.0,
                strokeWeight: 2
            });

            line.setMap(map);
        });
        </text>
        }

        

    }
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBwvl79MoSqGBr3vbfLq2eatNT3b9mB9o8&callback=LoadMap"></script>  